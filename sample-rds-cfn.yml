AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - RDS Definition Depends on sample-vpc-cfn.yml, sample-sg-cfn.yml

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: mynavi-sample-cloudformation-vpc
  RdsUser:
    Description: Database Master User Name
    Type: String
    Default: postgresql
  EnvType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Staging
  SecurityGroupDev:
    Description: The local machine permitted SecurityGroup is needed as paramater for Dev.
    Type: String
    Default: ""

Conditions:
  ProductionResources: {"Fn::Equals" : [{"Ref":"EnvType"}, "Production"]}
  StagingResources: !Equals [ !Ref EnvType, "Staging"]
  DevResources: {"Fn::Equals" : [{"Ref":"EnvType"}, "Dev"]}

Resources:
  RDSProductionInstance:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Condition: "ProductionResources"
    Properties:
      DBInstanceIdentifier: mynavi-sample-cloudformation-production-postgresql
      DBName: sample_database
      Engine: postgres
      MultiAZ: false
      MasterUsername: !Ref RdsUser
      MasterUserPassword: '{{resolve:ssm-secure:mynavi-sample-cloudformation-rds-password:1}}'
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '20'
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 10
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub ${VPCName}-SecurityGroupRdsPostgres

  RDSStagingInstance:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Condition: "StagingResources"
    Properties:
      DBInstanceIdentifier: mynavi-sample-cloudformation-staging-postgresql
      DBName: sample_database
      Engine: postgres
      MultiAZ: false
      MasterUsername: !Ref RdsUser
      MasterUserPassword: '{{resolve:ssm-secure:mynavi-sample-cloudformation-rds-password:1}}'
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '20'
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 10
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub ${VPCName}-SecurityGroupRdsPostgres

  RDSDevInstance:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Condition: "DevResources"
    Properties:
      DBInstanceIdentifier: mynavi-sample-cloudformation-dev-postgresql
      DBName: sample_database
      Engine: postgres
      MultiAZ: false
      MasterUsername: !Ref RdsUser
      MasterUserPassword: '{{resolve:ssm-secure:mynavi-sample-cloudformation-rds-password:1}}'
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '20'
      DBSubnetGroupName: !Ref DBSubnetGroupForDev
      MonitoringInterval: 10
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref SecurityGroupDev

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group for Private Subnet
      SubnetIds:
        - Fn::ImportValue: !Sub ${VPCName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${VPCName}-PrivateSubnet2

  DBSubnetGroupForDev:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group for Private Subnet
      SubnetIds:
        - Fn::ImportValue: !Sub ${VPCName}-PublicSubnet1
        - Fn::ImportValue: !Sub ${VPCName}-PublicSubnet2

  DBMonitorRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - sts:AssumeRole

Outputs:
  RDSProductionInstance:
    Condition: "ProductionResources"
    Description: RDS for Production
    Value: !Ref RDSProductionInstance
    Export:
      Name: !Sub ${VPCName}-RDS-Production

  RDSProductionInstanceEndPoint:
    Condition: "ProductionResources"
    Description: RDS endpoint for Production
    Value: !GetAtt RDSProductionInstance.Endpoint.Address
    Export:
      Name: !Sub ${VPCName}-RDSEndpoint-Production

  RDSStagingInstance:
    Condition: "StagingResources"
    Description: RDS endpoint for Staging
    Value: !Ref RDSStagingInstance
    Export:
      Name: !Sub ${VPCName}-RDS-Staging

  RDSStagingInstanceEndPoint:
    Condition: "StagingResources"
    Description: RDS endpoint for Staging
    Value: !GetAtt RDSStagingInstance.Endpoint.Address
    Export:
      Name: !Sub ${VPCName}-RDSEndpoint-Staging

  RDSDevInstance:
    Condition: "DevResources"
    Description: RDS for dev
    Value: !Ref RDSDevInstance
    Export:
      Name: !Sub ${VPCName}-RDS-Dev

  RDSDevInstanceEndPoint:
    Condition: "DevResources"
    Description: RDS endpoint for dev
    Value: !GetAtt RDSDevInstance.Endpoint.Address
    Export:
      Name: !Sub ${VPCName}-RDSEndpoint-Dev
