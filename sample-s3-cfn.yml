AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - S3 Bucket Definition

Mappings:
  BucketDefinitionMap:
    Production:
      "BucketName" : debugroom-mynavi-sample-cloudformation-bucket-production
      "AccessControl" : "Private"
      "BlockPublicAcls" : True
      "BlockPublicPolicy" : True
      "IgnorePublicAcls" : True
      "RestrictPublicBuckets" : True
    Staging:
      "BucketName" : debugroom-mynavi-sample-cloudformation-bucket-staging
      "AccessControl" : "Private"
      "BlockPublicAcls" : True
      "BlockPublicPolicy" : True
      "IgnorePublicAcls" : True
      "RestrictPublicBuckets" : True
    Dev:
      "BucketName" : debugroom-mynavi-sample-cloudformation-bucket-dev
      "AccessControl" : "Private"
      "BlockPublicAcls" : True
      "BlockPublicPolicy" : True
      "IgnorePublicAcls" : True
      "RestrictPublicBuckets" : True

Parameters:
  EnvType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Dev

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [BucketDefinitionMap, !Ref EnvType, BucketName]
      AccessControl: !FindInMap [BucketDefinitionMap, !Ref EnvType, AccessControl]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: !FindInMap [BucketDefinitionMap, !Ref EnvType, BlockPublicAcls]
        BlockPublicPolicy: !FindInMap [BucketDefinitionMap, !Ref EnvType, BlockPublicPolicy]
        IgnorePublicAcls: !FindInMap [BucketDefinitionMap, !Ref EnvType, IgnorePublicAcls]
        RestrictPublicBuckets: !FindInMap [BucketDefinitionMap, !Ref EnvType, RestrictPublicBuckets]

Outputs:
  S3Bucket:
    Description: Mynavi S3 bucket name
    Value: !Ref S3Bucket
    Export:
      Name: !Sub MynaviSampleS3Bucket-${EnvType}

  S3BucketArn:
    Description: Mynavi S3 bucket arn
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub MynaviSampleS3Bucket-Arn-${EnvType}
