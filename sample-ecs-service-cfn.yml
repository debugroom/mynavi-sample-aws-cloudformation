AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - ECS Service Launch Depends on sample-vpc-cfn.yml, sample-sg-cfn.yml, sample-ng-cfn.yml, sample-alb-cfn.yml, sample-tg-cfn.yml, sample-ecs-*.yml

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: mynavi-sample-cloudformation-vpc
  EnvType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Dev

Mappings:
  BackendUserServiceMap:
    Production:
      "DesiredCount": 1
      "ContainerName": "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort": 8080
    Staging:
      "DesiredCount": 1
      "ContainerName": "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort": 8080
    Dev:
      "DesiredCount": 1
      "ContainerName": "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort": 8080
  BackendSampleServiceMap:
    Production:
      "DesiredCount" : 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort" : 8080
    Staging:
      "DesiredCount" : 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort" : 8080
    Dev:
      "DesiredCount" : 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-backend-service"
      "ContainerPort" : 8080
  FrontendWebAppMap:
    Production:
      "DesiredCount": 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-frontend-app"
      "ContainerPort" : 8080
    Staging:
      "DesiredCount": 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-frontend-app"
      "ContainerPort" : 8080
    Dev:
      "DesiredCount": 1
      "ContainerName" : "mynavi-sample-cloudformation-ecs-frontend-app"
      "ContainerPort" : 8080

Resources:
  FrontendWebAppService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${VPCName}-FrontendEcsCluster-${EnvType}
      DesiredCount: !FindInMap [FrontendWebAppMap, !Ref EnvType, DesiredCount]
      HealthCheckGracePeriodSeconds: 60
      TaskDefinition:
        Fn::ImportValue: !Sub ${VPCName}-FrontendEcsTaskDefinition-${EnvType}
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: !FindInMap [FrontendWebAppMap, !Ref EnvType, ContainerName]
          ContainerPort: !FindInMap [FrontendWebAppMap, !Ref EnvType, ContainerPort]
          TargetGroupArn:
            Fn::ImportValue: !Sub ${VPCName}-Frontend-FrontendWebApp-TargetGroup-${EnvType}

  BackendUserService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${VPCName}-BackendEcsCluster-${EnvType}
      DesiredCount: !FindInMap [BackendUserServiceMap, !Ref EnvType, DesiredCount]
      HealthCheckGracePeriodSeconds: 60
      TaskDefinition:
        Fn::ImportValue: !Sub ${VPCName}-BackendEcsTaskDefinition-${EnvType}
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: !FindInMap [BackendUserServiceMap, !Ref EnvType, ContainerName]
          ContainerPort: !FindInMap [BackendUserServiceMap, !Ref EnvType, ContainerPort]
          TargetGroupArn:
            Fn::ImportValue: !Sub ${VPCName}-Backend-BackendUserService-TargetGroup-${EnvType}

  BackendSampleService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${VPCName}-BackendEcsCluster-${EnvType}
      DesiredCount: !FindInMap [BackendSampleServiceMap, !Ref EnvType, DesiredCount]
      TaskDefinition:
        Fn::ImportValue: !Sub ${VPCName}-BackendEcsTaskDefinition-${EnvType}
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: !FindInMap [BackendSampleServiceMap, !Ref EnvType, ContainerName]
          ContainerPort: !FindInMap [BackendSampleServiceMap, !Ref EnvType, ContainerPort]
          TargetGroupArn:
            Fn::ImportValue: !Sub ${VPCName}-Backend-BackendSampleService-TargetGroup-${EnvType}

Outputs:
  FrontendWebAppService:
    Description: Frontend ECS Service
    Value: !Ref FrontendWebAppService
    Export:
      Name: !Sub ${VPCName}-FrontendWebAppService-${EnvType}
  BackendUserService:
    Description: Backend ECS Service
    Value: !Ref BackendUserService
    Export:
      Name: !Sub ${VPCName}-BackendUserService-${EnvType}
  BackendSampleService:
    Description: Backend ECS Service
    Value: !Ref BackendSampleService
    Export:
      Name: !Sub ${VPCName}-BackendSampleService-${EnvType}
