AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - SecurityGroup depends on sample-vpc-cfn.yml.

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: mynavi-sample-cloudformation-vpc
  VPCCiderBlock:
    Description: CiderBlock paramater for VPC
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 172.200.0.0/16

Resources:
  SecurityGroupFrontendALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupFrontendLB
      GroupDescription: http access
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key : Name
          Value: !Sub ${VPCName}-SecurityGroupFrontendALB

  SecurityGroupInggressFrontendALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupFrontendALB
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0

  SecurityGroupBackendALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupBackendALB
      GroupDescription: http access
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key : Name
          Value: !Sub ${VPCName}-SecurityGroupBackendALB

  SecurityGroupIngressBackendALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupBackendALB
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: !Ref VPCCiderBlock

  SecurityGroupFrontendEcsCluster:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupFrontendEcsCluster
      GroupDescription: http access only alb
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key : Name
          Value: !Sub ${VPCName}-SecurityGroupFrontendEcsCluster

  SecurityGroupIngressFrontendEcsCluster:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupFrontendEcsCluster
      IpProtocol: tcp
      FromPort: 32768
      ToPort: 61000
      SourceSecurityGroupId: !Ref SecurityGroupFrontendALB

  SecurityGroupIngressForSSHFrontendEcsCluster:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupFrontendEcsCluster
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0

  SecurityGroupBackendEcsCluster:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupBackendEcsCluster
      GroupDescription: http access only alb
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key : Name
          Value: !Sub ${VPCName}-SecurityGroupBackendEcsCluster

  SecurityGroupIngressBackendEcsCluster:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupBackendEcsCluster
      IpProtocol: tcp
      FromPort: 32768
      ToPort: 61000
      SourceSecurityGroupId: !Ref SecurityGroupBackendALB

  SecurityGroupRdsPostgres:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupRdsPostgres
      GroupDescription: db access only backend subnet
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key: Name
          Value: !Sub ${VPCName}-SecurityGroupRdsPostgres

  SecurityGroupIngressRdsPostgres:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupRdsPostgres
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref SecurityGroupBackendEcsCluster

  SecurityGroupElastiCacheRedis:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupElastiCacheRedis
      GroupDescription: redis access only frontend ecs cluster
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key: Name
          Value: !Sub ${VPCName}-SecurityGroupElastiCacheRedis

  SecurityGroupIngressElastiCacheRedis:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupElastiCacheRedis
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: !Ref SecurityGroupFrontendEcsCluster

  SecurityGroupCodeBuild:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupCodeBuild
      GroupDescription: CodeBuild environments
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key: Name
          Value: !Sub ${VPCName}-SecurityGroupCodeBuild

Outputs:
  SecurityGroupPublicALB:
    Description: Security Group for Frontend ALB
    Value: !Ref SecurityGroupFrontendALB
    Export:
      Name: !Sub ${VPCName}-SecurityGroupFrontendALB

  SecurityGroupPrivateALB:
    Description: Security Group for Backend ALB
    Value: !Ref SecurityGroupBackendALB
    Export:
      Name: !Sub ${VPCName}-SecurityGroupBackendALB

  SecurityGroupFrontendEcsCluster:
    Description: Security Group for Frontend ECS Cluster
    Value: !Ref SecurityGroupFrontendEcsCluster
    Export:
      Name: !Sub ${VPCName}-SecurityGroupFrontendEcsCluster

  SecurityGroupBackendEcsCluster:
    Description: Security Group for Backend ECS Cluster
    Value: !Ref SecurityGroupBackendEcsCluster
    Export:
      Name: !Sub ${VPCName}-SecurityGroupBackendEcsCluster

  SecurityGroupRdsPostgress:
    Description: Security Group for RDS PostgreSQL
    Value: !Ref SecurityGroupRdsPostgres
    Export:
      Name: !Sub ${VPCName}-SecurityGroupRdsPostgres

  SecurityGroupElastiCacheRedis:
    Description: Security Group for ElastiCache Redis
    Value: !Ref SecurityGroupElastiCacheRedis
    Export:
      Name: !Sub ${VPCName}-SecurityGroupElastiCacheRedis

  SecurityGroupCodeBuild:
    Description: Security Group for CodeBuild
    Value: !Ref SecurityGroupCodeBuild
    Export:
      Name: !Sub ${VPCName}-SecurityGroupCodeBuild
