AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - parent stack for staging environment.

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: mynavi-sample-cloudformation-vpc
  EnvType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Staging"]
    Default: Staging

Resources:
  NATGatewayStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-ng-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}

  ALBStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-alb-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}

  BackendUserServiceTargetGroupStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBStagingStack
    Properties:
      TemplateURL: ./sample-tg-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}
        SubnetType: Backend
        ServiceName: BackendUserService

  BackendSampleServiceTargetGroupStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBStagingStack
    Properties:
      TemplateURL: ./sample-tg-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}
        SubnetType: Backend
        ServiceName: BackendSampleService

  FrontendWebAppTargetGroupStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBStagingStack
    Properties:
      TemplateURL: ./sample-tg-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}
        SubnetType: Frontend
        ServiceName: FrontendWebApp

  RDSStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-rds-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}

  DynamoDBStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-dynamodb-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}

  ElastiCacheStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-elasticache-cfn.yml
      Parameters:
        VPCName: !Sub ${VPCName}
        EnvType: !Sub ${EnvType}

  S3StagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-s3-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  SQSStagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./sample-sqs-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  ECSClusterStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: NATGatewayStagingStack
    Properties:
      TemplateURL: ./sample-ecs-cluster-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  ECSTaskDefinitionStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ECSClusterStagingStack
    Properties:
      TemplateURL: ./sample-ecs-task-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  BackendECSTaskRoleStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ECSTaskDefinitionStagingStack
    Properties:
      TemplateURL: ./sample-ecs-taskrole-backend-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  FrontendECSTaskRoleStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ECSTaskDefinitionStagingStack
    Properties:
      TemplateURL: ./sample-ecs-taskrole-backend-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

  ECSServiceStagingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - BackendECSTaskRoleStagingStack
      - FrontendECSTaskRoleStagingStack
      - BackendSampleServiceTargetGroupStagingStack
      - BackendUserServiceTargetGroupStagingStack
      - FrontendWebAppTargetGroupStagingStack
    Properties:
      TemplateURL: ./sample-ecs-service-cfn.yml
      Parameters:
        EnvType: !Sub ${EnvType}

